/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>


#define ZMK_POINTING_DEFAULT_MOVE_VAL 2000  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20 

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ { 

	kscan: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        wakeup-source;
    };


    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

		oexcl: one_exclamation {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_1>, <&kp EXCLAMATION>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

		twat: two_at_sign {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp NUMBER_2>, <&kp AT_SIGN>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

		qoexcl: q_oexcl {
            compatible = "zmk,behavior-hold-tap";
            label = "Q_ONE_EXCL_MOD";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&oexcl>, <&kp>;
        };

		wtwat: w_twat {
            compatible = "zmk,behavior-hold-tap";
            label = "W_TWO_AT_MOD";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&twat>, <&kp>;
        };
		
		td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };		
    };

    keymap {
		compatible = "zmk,keymap";
            
    	default_layer {
            // -----------------------------------------------------------------------------------------
            // | none |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | none |
            // | none |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | none |
            // | none |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | none |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
			bindings = <
				&none    &qoexcl Q    &wtwat W    &kp E         &kp R         &kp T 				&kp Y    &kp U         &kp I         &kp O      &kp P       &none
				&none    &kp A    &kp S    &hm LALT D    &hm LCTRL F    &kp G 			       	&kp H    &hm RCTRL J    &hm RALT K    &kp L      &kp SEMI    &none
				&none    &kp Z    &kp X    &kp C         &kp V         &kp B				&kp N    &kp M         &kp COMMA     &kp DOT    &kp FSLH    &none
    			  			         &sk LSHIFT    &sk LGUI    &kp SPACE                           &kp RET  &kp BACKSPACE    &to 1
			>;
		};

    	left_layer {
            // -----------------------------------------------------------------------------------------
            // | none |  ESC  |  @  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | none |
            // | none |  TAB  |  =  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | none |
            // | none |   ~   |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | none |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
			bindings = <
				&none    &kp ESC      &kp AT        &td LC(LG(LS(N4))) LS(N3)    &kp DLLR            &kp PRCNT		                &kp CARET    &kp LS(COMMA)    &kp LS(DOT)    &kp SEMI    &kp BKSP    &none
				&none    &kp TAB      &kp EQUAL     &kp LA(RBKT)                 &kp LA(LS(RBKT))    &kp SQT 		                &kp BSLH     &kp LBRC         &kp RBRC       &kp PIPE    &kp ENTER   &none
				&none    &kp TILDE    &kp LA(N3)    &kp LA(LBKT)                 &kp LA(LS(LBKT))    &kp DQT                           &kp LBKT     &kp LPRN         &kp RPRN       &kp RBKT    &to 3       &none
							                                        &to 0    &sk LGUI    &kp SPACE                           &kp RET    &sk RALT    &to 2 
			>;
		};
	
		right_layer {
			bindings = <
				&none    &kp ESC    &kp C_PP    &kp C_PREV      &kp C_NEXT      &kp LS(MINUS)    		                        &kp MINUS    &kp N7    &kp N8    &kp N9    &none       &none 
				&none    &kp TAB    &none      &kp C_VOL_DN    &kp C_VOL_UP    &kp LS(EQUAL) 			                        &kp EQUAL    &kp N4    &kp N5    &kp N6    &kp ENTER    &none 
				&none    &to 4      &kp AMPS    &kp SLASH       &kp STAR        &kp DOT    			                        &kp N0       &kp N1    &kp N2    &kp N3    &none       &none 
							                        &to 0    &sk LGUI    &kp SPACE                                          &kp RET	   &sk RALT    &to 4 
			>;
		};
						 
		tri_layer {
			bindings = <
				&none    &none                 &msc SCRL_LEFT    &mmv MOVE_UP      &msc SCRL_RIGHT    &kp NUM_5 			&kp LG(LBKT)   &kp LC(LS(TAB))   &kp RC(TAB) &kp LG(RBKT) &none &none
				&none    &kp F1                 &mmv MOVE_LEFT    &mmv MOVE_DOWN    &mmv MOVE_RIGHT    &kp DEL  						&kp LEFT &kp DOWN  &kp UP &kp RIGHT &kp ENTER  &none
				&none    &td LG(GRAVE) GRAVE    &mkp LCLK         &msc SCRL_UP      &msc SCRL_DOWN     &mkp RCLK   				&mkp LCLK &kp PG_DN  &kp K_VOL_DN  &none &none    &none
							 &to 0 &none &none  					&none &sk RALT &to 1 
			>;
		};
		
		bt_layer {
			bindings = <
				&none    &none         &none         &none         &none          &none 								&none    &none          &none    &none    &none    &none
				&none    &none         &none         &none         &none          &none  								&none    &none          &none    &none    &none    &none
				&none    &bt BT_PRV    &bt BT_NXT    &bt BT_CLR    &bootloader    &none   								&none    &bootloader    &none    &none    &none    &none
							 									&to 0    &none    &none  					            &none    &none    &to 1 
			>;
		};	
	};
};